name: 'Terraform Apply'

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  TF_VERSION: '1.5.0'
  TF_WORKING_DIR: '.'

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init \
          -backend-config=backend.hcl \
          -backend-config="access_key=${{ secrets.YC_S3_ACCESS_KEY }}" \
          -backend-config="secret_key=${{ secrets.YC_S3_SECRET_KEY }}"

    - name: Terraform Format Check
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform fmt -check -recursive

    - name: Terraform Validate
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform validate

    - name: Terraform Plan
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform plan \
          -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
          -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
          -var="sa_key=${{ secrets.YC_SA_KEY }}" \
          -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
          -out=tfplan
      continue-on-error: true

    - name: Comment Plan
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan ðŸ“‹
          \`\`\`\n
          ${process.env.PLAN || 'No changes. Infrastructure is up-to-date.'}
          \n\`\`\`
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform apply \
          -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
          -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
          -var="sa_key=${{ secrets.YC_SA_KEY }}" \
          -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
          -auto-approve
      env:
        TF_VAR_sa_key: ${{ secrets.YC_SA_KEY }}

    - name: Comment Apply
      if: github.event_name == 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Apply âœ…
          
          Infrastructure has been successfully applied!
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
