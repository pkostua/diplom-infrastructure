name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type DESTROY to confirm destroying infrastructure'
        required: true
        default: 'NO'

env:
  TF_VERSION: '1.12.2'
  TF_WORKING_DIR: '.'

permissions:
  contents: read

jobs:
  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Verify confirmation
      if: inputs.confirm != 'DESTROY'
      run: |
        echo "Refusing to proceed: input confirm must be DESTROY" >&2
        exit 1

    - name: Write SA key to file
      working-directory: ${{ env.TF_WORKING_DIR }}
      shell: bash
      run: |
        cat > sa_key.json <<'JSON'
        ${{ secrets.YC_SA_KEY }}
        JSON

    - name: Terraform Init
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init \
          -backend-config=backend.hcl \
          -backend-config="access_key=${{ secrets.YC_S3_ACCESS_KEY }}" \
          -backend-config="secret_key=${{ secrets.YC_S3_SECRET_KEY }}"

    - name: Terraform Validate
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform validate

    - name: Terraform Destroy
      working-directory: ${{ env.TF_WORKING_DIR }}
      env:
        TF_VAR_sa_key_file: ./sa_key.json
      run: |
        terraform destroy \
          -var="folder_id=${{ secrets.YC_FOLDER_ID }}" \
          -var="cloud_id=${{ secrets.YC_CLOUD_ID }}" \
          -var="sa_key_file=./sa_key.json" \
          -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
          -auto-approve
